spring.application.name=apigateway-service

server.port=8058

#i do not want to register this as a client.
#if we using diff port no. at Eureka server other than 8762 we need to use 
#follwing property at client's application.properties file.
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Mention about eureka server url
eureka.client.service-url.defaultZone=http://localhost:8762/eureka/

#this property used when we deply application on cloud.
eureka.instance.prefer-ip-address=true

#for distributed loggging add this proeprty.
logging.pattern.level='%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

#add some properties to see logs in zipkin #zipkin provide endpoint below one property getting error in application
#w=so, we comment below 1 proeprty & add spring.zipkin.url=http://localhost:9411
#management.zipkin.tracing.endpoint=http://localhost:9411/zipkin/api/v2/spans
spring.zipkin.url=http://localhost:9411

#1.0 means 100% it should not remove any traceid
management.tracing.sampling.probability=1.0

#properies to enable api-gateway
management.endpoints.web.exposure.include=*

management.endpoint.gateway.access=unrestricted

#if  we do not want bydefault url exposure by api-gateway make it as false below property.
spring.cloud.gateway.discovery.locator.enabled=true

spring.cloud.gateway.routes[0].id=USER-MS
spring.cloud.gateway.routes[0].predicates[0]=Path=/javaexpress/user-service/**
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/javaexpress/user-service/?(?<remaining>.*),/${remaining}







